<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Customer_Support_Ticketing_System">

    <!-- Defines colors-->
    <SolidColorBrush x:Key="MouseOverColor">#f0f4f3</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor">#202135</SolidColorBrush>
    <SolidColorBrush x:Key="MainColor">#709287</SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryColor">#e2e9e7</SolidColorBrush>
    <SolidColorBrush x:Key="DeleteColor">#C76C6B</SolidColorBrush>
    <SolidColorBrush x:Key="EditColor">#D97C54</SolidColorBrush>

    <!--#region TextBlock Styles -->
    <!-- This style defines a text used for buttons-->
    <Style x:Key="ButtonTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>
    <!--#endregion-->

    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource MainColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Height" Value="40"/>

        <!-- ControlTemplate for Full Control Over Background -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10"/>
                    </Border>

                    <!-- ControlTemplate Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource MouseOverColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource DeleteColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <TextBlock Text="&#xE74D;" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource EditColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                             Background="{TemplateBinding Background}"
                             CornerRadius="5"
                         Width="{TemplateBinding Width}"
                         Height="{TemplateBinding Height}">
                        <TextBlock Text="&#xE70F;" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#region TextBox Styles -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="AcceptsTab" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="TextBoxBorder" Background="Transparent" BorderBrush="{DynamicResource MainColor}" BorderThickness="1" CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Datagrid styles -->
    <Style x:Key="DatagridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="Background" Value="white"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
    </Style>

    <Style x:Key="DatagridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverColor}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverColor}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatagridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverColor}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatagridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
    </Style>
    <!--#endregion-->

</ResourceDictionary>