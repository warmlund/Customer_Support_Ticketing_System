<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Customer_Support_Ticketing_System">

    <!-- Defines converters-->

    <!--#region TextBlock Styles -->
    <!-- This style defines a text used for buttons-->
    <Style x:Key="ButtonTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBox Styles -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#914c66"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="AcceptsTab" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="TextBoxBorder" Background="Transparent" BorderBrush="#914c66" BorderThickness="1" CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Expander Styles-->
    <Style x:Key="ExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="#914c66"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <TextBlock Name="UpDownText"
                   FontFamily="Segoe MDL2 Assets"
                   FontSize="12"
                   Text="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}, Converter={StaticResource UpDownExpanderConverter}}"
                   Foreground="White"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="UpDownText" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="#914c66"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="Border" CornerRadius="5" Background="{TemplateBinding Background}">
                        <DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <!-- ToggleButton for Arrow -->
                                <ToggleButton x:Name="HeaderToggle"
                            Grid.Column="0" Grid.Row="0"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpanderHeaderStyle}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"/>

                                <!-- ContentPresenter for the Expander's Header -->
                                <ContentPresenter
                            ContentSource="Header"
                            Grid.Column="1" Grid.Row="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="5,0,0,0"
                            DockPanel.Dock="Right"/>

                                <!-- Content to be expanded/collapsed -->
                                <ContentPresenter x:Name="ExpandSite"
                            Grid.ColumnSpan="2" Grid.Row="1"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Visibility="Collapsed"
                            Focusable="false"/>
                            </Grid>
                        </DockPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Datagrid styles -->
    <Style x:Key="DatagridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#99506d"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
        <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
    </Style>

    <Style x:Key="DatagridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="MinWidth" Value="100"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#CC99506D"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatagridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#99506d"/>
                <Setter Property="BorderBrush" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatagridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background"  Value="#99506d"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>
    <!--#endregion-->

</ResourceDictionary>